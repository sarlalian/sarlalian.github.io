<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WILLFife.com</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on WILLFife.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Apr 2015 22:10:15 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo</title>
      <link>http://localhost:1313/blog/2015/04/21/hugo/</link>
      <pubDate>Tue, 21 Apr 2015 22:10:15 -0700</pubDate>
      
      <guid>http://localhost:1313/blog/2015/04/21/hugo/</guid>
      <description>

&lt;h2 id=&#34;history-of-a-blog:32ab7241d48fcc174c877413a917f8cf&#34;&gt;History of a blog&lt;/h2&gt;

&lt;p&gt;Over the years I’ve maintained various blog’s using various
engines, including &lt;a href=&#34;https://wordpress.com/&#34;&gt;Wordpress&lt;/a&gt;,
&lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; and
&lt;a href=&#34;https://www.blogger.com/home&#34;&gt;Blogger&lt;/a&gt;, and most recently my move to
&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.  Hugo, like Jekyll is a simple blog aware
static website engine.  With the larger, more comprehensive platforms,
I always felt trapped and constrained within whatever themes were
available, but with the static site generators it was easier to iterate
on the design to get the look and effect that I wanted.&lt;/p&gt;

&lt;h2 id=&#34;ruby-vs-go:32ab7241d48fcc174c877413a917f8cf&#34;&gt;Ruby vs. Go&lt;/h2&gt;

&lt;p&gt;I enjoy &lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt; as a programming language,
I use it a bit at my &lt;a href=&#34;http://www.laika.com&#34;&gt;DayJob&lt;/a&gt;, and when my blog
was using Jekyll or Octopress which is based on Jekyll, that was the
language of choice there as well.  Ruby is a beautiful, expressive
language that lends its self, much like perl to clever code.  I guess
that over the years, I have grown less fond of eing clever with my code.
So this incarnation around, I decided to go with hugo.  It is written in
&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; which I am growing increasingly fond of.  I
came across &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; because it was created by &lt;a href=&#34;http://spf13.com/&#34;&gt;Steve
Francia&lt;/a&gt; who created several packages that I use in my
go development.  So far I’m liking it quite a lot.&lt;/p&gt;

&lt;h2 id=&#34;hugo:32ab7241d48fcc174c877413a917f8cf&#34;&gt;Hugo&lt;/h2&gt;

&lt;p&gt;Hugo seems to have the full gambit of features that one would look for
in a static site generator.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/themes/overview/&#34;&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/content/front-matter/&#34;&gt;Front matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/content/sections/&#34;&gt;Sections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/templates/overview/&#34;&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/extras/livereload/&#34;&gt;Live Reload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/extras/highlighting/&#34;&gt;Syntax Highlighting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/extras/aliases/&#34;&gt;And more&amp;hellip;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, since hugo is written in &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;, it will work
on most unixes as well as windows, and deployment is as simple as
downloading a single binary.  Oh and did I mention, its fast.  Damn fast,
really really damn fast.  So far, I’m liking it quite a lot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Will</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Tue, 21 Apr 2015 22:10:15 -0700</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;I am a systems administrator at &lt;a href=&#34;http://www.laika.com&#34;&gt;Laika&lt;/a&gt;, where I work in a heteogenous environment consisting of &lt;a href=&#34;https://getfedora.org/&#34;&gt;Fedora Linux&lt;/a&gt;, &lt;a href=&#34;http://freebsd.org/&#34;&gt;FreeBSD&lt;/a&gt;, &lt;a href=&#34;https://www.apple.com/osx/&#34;&gt;MacOS X&lt;/a&gt; and &lt;a href=&#34;http://windows.microsoft.com/en-us/windows/home#&#34;&gt;Windows&lt;/a&gt; servers and workstations. This involves much of your typical systems administrator type tasks as well as quite a bit of developmet work.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;When I was 16 my friends and I started programming in &lt;a href=&#34;http://en.wikipedia.org/wiki/QuickBASIC&#34;&gt;Quick Basic&lt;/a&gt;, in an attempt to create video games and &lt;a href=&#34;http://en.wikipedia.org/wiki/Demoscene&#34;&gt;demos&lt;/a&gt;.  Needless to say, basic isn&amp;rsquo;t really the best language for complex graphics so we were less than succesful.  Most of us have gone on to careers in technology, whether as developers or as systems administrators.&lt;/p&gt;

&lt;p&gt;My first technology job was for a company known as Digital Imaging, that contracted with FedEx and UPS to scan in their billing documents and transmit them offshore for data entry.  They were eventually bought out by &lt;a href=&#34;http://en.wikipedia.org/wiki/Lason&#34;&gt;Lason&lt;/a&gt;.  While at Digital Imaging, I became a developer using Kofax image controls and Visual Basic 5 to develop scanning software for high speed imaging using &lt;a href=&#34;http://www.bellhowell.net/&#34;&gt;Bell and Howell&lt;/a&gt; scanners.  Since then I have programmed in C++, Perl, Java, Python, Node.js, Ruby and most recently go.&lt;/p&gt;

&lt;p&gt;Also while at Digital Imaging I was introduced to Linux.  Slackware 3.2 to be specific, and one of my first tasks was to recompile the kernel with the newly released driver for the 3c905tx network card.  I have been using Linux or various flavors of unix in one way or another since 1997.  My first games of GL Quake were played on linux.&lt;/p&gt;

&lt;p&gt;These days my toolbox is mostly geared towards a life in a terminal, with few exceptions.  I tend to use &lt;a href=&#34;http://www.vim.org/&#34;&gt;vim&lt;/a&gt; under &lt;a href=&#34;http://tmux.sourceforge.net/&#34;&gt;tmux&lt;/a&gt; on &lt;a href=&#34;https://www.apple.com/osx/&#34;&gt;MacOS X&lt;/a&gt; or &lt;a href=&#34;http://freebsd.org/&#34;&gt;FreeBSD&lt;/a&gt;.  I do most of my programming in &lt;a href=&#34;https://golang.org/&#34;&gt;go&lt;/a&gt; which I have grown quite fond of.  On my mac I use &lt;a href=&#34;http://www.hammerspoon.org/&#34;&gt;hammerspoon&lt;/a&gt; to approximate a tiling window manager and on FreeBSD/Linux I use &lt;a href=&#34;https://i3wm.org/&#34;&gt;i3&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>